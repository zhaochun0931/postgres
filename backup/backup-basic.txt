To back up and recover a PostgreSQL database, you can use built-in tools like pg_dump and pg_restore for logical backups, or pg_basebackup for physical backups.



1. Logical backup: pg_dump

pg_dump exports a database's contents into a file containing SQL commands. This method is flexible for moving data between different PostgreSQL versions, but can be slow for very large databases. 


How to back up
You can use pg_dump to create a backup file in a standard SQL format or a compressed, custom format. The custom format is more flexible and can be restored with pg_restore. 

Backup a single database to a custom compressed file 
pg_dump -Fc -U username -d dbname -f backup_file.dump

Use code with caution.

-F c: Specifies the custom archive format, which is compressed and allows for selective restoration.
-U username: Specifies the PostgreSQL user.
-d dbname: Specifies the database to back up.
-f backup_file.dump: Specifies the output file path. 



Backup all databases to a single SQL script
For backing up an entire database cluster (including roles and tablespaces), use pg_dumpall. 

pg_dumpall -U postgres > full_cluster_backup.sql
