mkdir -p ./pgssl/{server,client}




cd pgssl



🪪 Step 1 — Create a Root Certificate Authority (CA)

This CA will sign both the server and client certs.

openssl req -new -x509 -days 365 -nodes \
  -subj "/CN=pg-ca" \
  -keyout ca.key -out ca.crt







🖥️ Step 2 — Create the Server Certificate

openssl req -new -nodes \
  -subj "/CN=pg-server" \
  -keyout server/server.key -out server/server.csr

openssl x509 -req -in server/server.csr \
  -CA ca.crt -CAkey ca.key -CAcreateserial \
  -out server/server.crt -days 365

chmod 600 server/server.key











👩‍💻 Step 3 — Create the Client Certificate

openssl req -new -nodes \
  -subj "/CN=pg-client" \
  -keyout client/client.key -out client/client.csr

openssl x509 -req -in client/client.csr \
  -CA ca.crt -CAkey ca.key -CAcreateserial \
  -out client/client.crt -days 365

chmod 600 client/client.key






pgssl
    ├── ca.crt
    ├── ca.key
    ├── ca.srl
    ├── client
    │   ├── client.crt
    │   ├── client.csr
    │   └── client.key
    └── server
        ├── server.crt
        ├── server.csr
        └── server.key

















docker exec -it pg-server psql -U admin -d testdb



CREATE ROLE ssluser LOGIN;
CREATE ROLE md5user LOGIN PASSWORD 'md5pass';
CREATE ROLE nossluser LOGIN;











psql -h postgres -U admin -d testdb


SELECT usename, passwd FROM pg_shadow;



testdb=# SELECT usename, passwd FROM pg_shadow;
-[ RECORD 1 ]----------------------------------------------------------------------------------------------------------------------------------
usename | admin
passwd  | SCRAM-SHA-256$4096:BWCk0c3BVRMO+oNJrOH5FQ==$QJxBkNgFsSaWtILkNZTbD/Mi8GyiukuJH/OOX7/ksRg=:5UdYsZ/7Jtlbr3mTGV/s4Gg0z8h6qZq9rzKlToXAZro=

testdb=#








1️⃣ Why it’s stored as SCRAM even for md5user

  PostgreSQL ≥10 automatically stores passwords in SCRAM-SHA-256 format when the user is created if the database cluster defaults to SCRAM.
  
  The pg_hba.conf setting (md5 vs scram-sha-256) does not retroactively change the stored password.
  
  pg_hba.conf only controls which authentication method is required for incoming connections, not how passwords are stored.








docker exec -it pg-client bash

