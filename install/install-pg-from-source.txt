apt update
apt-get install -y build-essential libreadline-dev zlib1g-dev flex bison libxml2-dev libxslt-dev libssl-dev libxml2-utils xsltproc ccache pkg-config
apt-get install -y libkrb5-dev


wget https://ftp.postgresql.org/pub/source/v17.4/postgresql-17.4.tar.gz



md5sum postgresql-17.4.tar.gz
6c6cb3f34286ca839077176b714f494d  postgresql-17.4.tar.gz



tar -xvf postgresql-17.4.tar.gz
cd postgresql-17.4
./configure
make

or

make -j$(nproc)


make install










# install finished
















adduser postgres
mkdir -p /data1 /data2
chown -R postgres:postgres /data1 /data2




su - postgres
export PATH=/usr/local/pgsql/bin:$PATH








- initialize a database (initdb command)
- start up a database




Before you can do anything, you must initialize a database storage area on disk. We call this a database cluster.
After initialization, a database cluster will contain a database named postgres. There are two more databases created within each cluster during initialization, named template1 and template0. 

template0 should never be modified, but you can add objects to template1, which by default will be copied into databases created later.

After initialization, three databases should be created automatically. 
- postgres
- template0
- template1

In file system terms, a database cluster is a single directory under which all data will be stored. We call this the data directory or data area. 





To initialize a database cluster manually, run initdb and specify the desired file system location of the database cluster with the -D option. There is no default, although locations such as /usr/local/pgsql/data or /var/lib/pgsql/data are popular.


initdb --version

initdb -D /usr/local/pgsql/data




Alternatively, you can run initdb via the pg_ctl program like so:

pg_ctl -D /usr/local/pgsql/data initdb





Before anyone can access the database, you must start the database server. The database server program is called postgres. 

The bare-bones way to start the server manually is just to invoke postgres directly, specifying the location of the data directory with the -D option, for example:

postgres -D /usr/local/pgsql/data

postgres -D /usr/local/pgsql/data >logfile 2>&1 &




$ postgres -D /data1
2025-03-04 13:56:18.225 UTC [45968] LOG:  starting PostgreSQL 17.4 on aarch64-unknown-linux-gnu, compiled by gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0, 64-bit
2025-03-04 13:56:18.226 UTC [45968] LOG:  listening on IPv4 address "127.0.0.1", port 5432
2025-03-04 13:56:18.229 UTC [45968] LOG:  listening on Unix socket "/tmp/.s.PGSQL.5432"
2025-03-04 13:56:18.233 UTC [45973] LOG:  database system was shut down at 2025-03-04 13:55:59 UTC
2025-03-04 13:56:18.235 UTC [45968] LOG:  database system is ready to accept connections







While the server is running, its PID is stored in the file postmaster.pid in the data directory. This is used to prevent multiple server instances from running in the same data directory and can also be used for shutting down the server.









su - postgres
initdb -D /data1/
pg_ctl -D /data1/ -l logfile start








During the installation, the database user called postgres will be created automatically, you shoud also set the password for it.



alter user postgres with password 'password';



postgres@ubuntu1:/data1$ psql
psql (17.4)
Type "help" for help.

postgres=# \du
                             List of roles
 Role name |                         Attributes
-----------+------------------------------------------------------------
 postgres  | Superuser, Create role, Create DB, Replication, Bypass RLS

postgres=#
postgres=#
postgres=#
postgres=# alter user postgres with password 'password';
ALTER ROLE
postgres=#









initdb -D /data2/
pg_ctl -D /data2 -o '-p 5433' -l logfile start


createdb testdb
psql testdb
